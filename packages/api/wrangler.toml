# web3.storage wrangler config.
name = "web3-storage"
main = "./dist/worker.js"
compatibility_date = "2023-06-14"
no_bundle = true

[build]
command = "npm run build"

[[migrations]]
tag = "v0"
new_classes = ["NameRoom0"]

[[migrations]]
tag = "v1"
deleted_classes = ["NameRoom0"]

# ---- Environment specific overrides below ! ----
# NOTE: wrangler automatically assigns each env the root `name` with the env name suffixed on the end
# NOTE: wrangler tries to find an account_id defined at the root if workers_dev = true is not provided on your env.
# NOTE: set BOTH a `route` template and `zone_id` to deploy to a custom domain.
# NOTE: set worker_dev to true to deploy to a ${name}.${zone}.workers.dev
# NOTE: `vars` are not inherited by envs. You need to declare all of them in each env.

# Test!
[env.test]
workers_dev = true
vars = { DEBUG = "true", ENV= "test" }
r2_buckets = [
  # CAR files live here.
  { binding = "CARPARK", bucket_name = "carpark-test-0" },
  # Mapping root data CIDs to CAR CID(s).
  { binding = "DUDEWHERE", bucket_name = "dudewhere-test-0" },
  # CARv2 indexes - a mapping of block offsets within CAR files.
  { binding = "SATNAV", bucket_name = "satnav-test-0" }
]

# PROD!
[env.production]
# name = "web3-storage-production"
account_id = "fffa4b4363a7e5250af8357087263b3a" # Protocol Labs CF account
route = { pattern = "https://api.web3.storage/*", zone_id = "7eee3323c1b35b6650568604c65f441e" }
vars = { CARPARK_URL = "https://carpark.web3.storage", CLUSTER_API_URL = "https://pickup.dag.haus", ENV = "production", PG_REST_URL = "https://web3-storage-pgrest-prod.herokuapp.com", GATEWAY_URL = "https://dag.w3s.link,https://ipfs.io" }
r2_buckets = [
  { binding = "CARPARK", bucket_name = "carpark-prod-0" },
  { binding = "DUDEWHERE", bucket_name = "dudewhere-prod-0" },
  { binding = "SATNAV", bucket_name = "satnav-prod-0" }
]

[env.staging]
# name = "web3-storage-staging"
account_id = "fffa4b4363a7e5250af8357087263b3a" # Protocol Labs CF account
route = { pattern = "https://api-staging.web3.storage/*", zone_id = "7eee3323c1b35b6650568604c65f441e" }
# nft.storage.ipfscluster.io is the staging cluster
vars = { CARPARK_URL = "https://carpark-staging.web3.storage", CLUSTER_API_URL = "https://staging.pickup.dag.haus", ENV = "staging", PG_REST_URL = "https://web3-storage-pgrest-staging.herokuapp.com", GATEWAY_URL = "https://dag-staging.w3s.link,https://ipfs.io" }
r2_buckets = [
  { binding = "CARPARK", bucket_name = "carpark-staging-0" },
  { binding = "DUDEWHERE", bucket_name = "dudewhere-staging-0" },
  { binding = "SATNAV", bucket_name = "satnav-staging-0" }
]

[env.alan]
workers_dev = true
account_id = "4fe12d085474d33bdcfd8e9bed4d8f95"
vars = { CLUSTER_API_URL = "https://alan-cluster-api-web3-storage.loca.lt", PG_REST_URL = "https://alan-postgres-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.oli]
workers_dev = true
account_id = "6e5a2aed80cd37d77e8d0c797a75ebbd"
vars = { CLUSTER_API_URL = "https://oli-cluster-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.yusef]
workers_dev = true
account_id = "8c3da25233263bd7a26c0e2e04569ded"
vars = { CLUSTER_API_URL = "https://yusef-cluster-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.vsantos]
workers_dev = true
account_id = "7ec0b7cf2ec201b2580374e53ba5f37b"
vars = { CLUSTER_API_URL = "https://vascosantos-cluster-api-web3-storage.loca.lt", PG_REST_URL = "https://vascosantos-postgres-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.tempus]
workers_dev = true
account_id = "4303c6f9fed102b35399fe94af99f8bd"
vars = { CLUSTER_API_URL = "https://tempus-cluster-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.paolo]
workers_dev = true
account_id = "21ba9b25d0fe2fbefc6c9f17e1b90d86"
vars = { CLUSTER_API_URL = "https://paolo-cluster-api-web3-storage.loca.lt/", PG_REST_URL = "https://paolo-postgres-api-web3-storage.loca.lt/", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.garyhomewood]
workers_dev = true
account_id = "e7a8a523464d26ce98e3747575b366b6"
vars = { CLUSTER_API_URL = "https://garyhomewood-cluster-api-web3-storage.loca.lt/", PG_REST_URL = "https://garyhomewood-postgres-api-web3-storage.loca.lt/", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.leslieoa]
workers_dev = true
account_id = "ede80955a038a6911c9b03ae4343fee4"
vars = { CLUSTER_API_URL = "https://leslieoa-cluster-api-web3-storage.loca.lt", PG_REST_URL = "https://leslieoa-postgres-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

[env.alexandra]
workers_dev = true
account_id = "a454b0d1615f83ee5d00a63ae152f36f"
vars = { CLUSTER_API_URL = "https://alexandra-cluster-api-web3-storage.loca.lt", PG_REST_URL = "https://alexandra-postgres-api-web3-storage.loca.lt", ENV = "dev" }

[env.josh]
workers_dev = true
account_id = "b649c9389ef9c1d318ac2945b2415046"
vars = { CLUSTER_API_URL = "https://josh-cluster-api-web3-storage.loca.lt", PG_REST_URL = "https://josh-postgres-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }

# Add your env here. Override the the values you need to change.

# Create your env name as the value of `whoami` on your system, so you can run `npm start` to run in dev mode.
# Copy this template and fill out the values
# [env.${whoami}]
# workers_dev = true
# account_id = "<get me from `wrangler whoami`"
# vars = { CLUSTER_API_URL = "https://<your ${whoami} here>-cluster-api-web3-storage.loca.lt", PG_REST_URL = "https://<your ${whoami} here>-postgres-api-web3-storage.loca.lt", ENV = "dev", GATEWAY_URL = "https://ipfs.io" }
