.account-plans-modal {
  .modalContainer {
    padding: 2rem;
    border-radius: 10px;
    background-color: $shark;
  }

  .modalInner {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: #fff;
    gap: 8px;

    .billing-card {
      max-width: 100%;
      width: 500px;
    }
  }

  .background-view-wrapper {
    z-index: -1;
  }

  .billing-plans {
    color: #fff;
    border-radius: 10px;
  }

  .billing-card {
    border: 2px solid transparent;
  }

  .billing-card.active {
    border: 2px solid $malibu;
  }

  .billing-card.current {
    position: relative;
    border-left: 0;
    &:after {
      content: 'Current Plan';
      position: absolute;
      top: 8px;
      left: -2px;
      width: calc(100% + 4px);
      background: $malibu;
      font-size: 12px;
      font-weight: 600;
      letter-spacing: 1px;
      color: #fff;
      padding: 2px 2rem;
      border-radius: 8px 8px 0 0;
      text-align: left;
      text-transform: uppercase;
    }

    + .billing-card {
      border-left: 0;
    }
  }

  .account-plans-confirm {
    display: flex;
    width: 100%;
    justify-content: space-between;
    .button.disabled {
      opacity: 0.5;
    }
  }

  .add-payment-method-cta + .account-plans-confirm {
    opacity: 0.5;
  }

  .billing-terms-toggle {
    width: 100%;
    position: relative;
    line-height: 1.5;
    font-size: 13px;
    display: grid;
    align-items: center;
    grid-template-columns: 1em auto;
    gap: 0.75em;
    input {
      display: grid;
      place-content: center;
      appearance: none;
      font: inherit;
      color: currentColor;
      width: 1.15em;
      height: 1.15em;
      border: 0.15em solid currentColor;
      border-radius: 0.15em;
      transform: translateY(-0.075em);
      cursor: pointer;
    }
    input[type='checkbox']::before {
      content: '';
      width: 0.65em;
      height: 0.65em;
      transform: scale(0);
      transition: 120ms transform ease-in-out;
      box-shadow: inset 1em 1em #fff;
      pointer-events: none;
    }

    input[type='checkbox']:checked::before {
      transform: scale(1);
    }

    a {
      color: $cyan;
    }
  }
}
